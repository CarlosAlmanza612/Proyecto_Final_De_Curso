/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas.VentanasPrincipales;

import controladores.UsuarioBean;
import java.util.List;
import modelos.Usuario;
import vistas.Fondo;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * Clase Login extienda de la Clase Fondo, es la primer ventana que inicia con
 * el Frame
 *
 * @author Carlos Halberth Almanza Lopez
 */
public class Login extends Fondo {

    JFrame frame = new JFrame();

    /**
     * Creates new form Login
     */
    public Login() {

        initComponents();

    }

    /**
     * Creates new form Login
     *
     * @param jframe
     */
    public Login(JFrame jframe) {

        initComponents();
        frame = jframe;
        btnAceptar.setEnabled(false);

    }

    /**
     * Metodo para habilitar boton dependiendo de que un textfield no este vacio
     */
    public void habilitarBoton() {
        if (!txtUser.getText().isEmpty()) {
            btnAceptar.setEnabled(true);
        } else {
            btnAceptar.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtPasswordField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(153, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/img3.png"))); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 30, 30));

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/img1.png"))); // NOI18N
        btnCancelar.setPreferredSize(new java.awt.Dimension(30, 30));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 30, 30));

        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/63474_lock_locked_log in_login_padlock_icon (1).png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, 70));

        txtUser.setPreferredSize(new java.awt.Dimension(64, 25));
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserKeyReleased(evt);
            }
        });
        add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 160, 30));
        add(txtPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 160, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        /**
         * Evento que verifica si el usuario ingresado ya existe
         */
        String user = txtUser.getText();
        char[] c = txtPasswordField.getPassword();
        String pass = String.valueOf(c);
        verificarUsuario(user, pass);

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        /**
         * Evento que fuerza salir de la aplicacion
         */
        System.exit(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyReleased
        /**
         * Evento que al pulsar una tecla habilita un boton
         */
        habilitarBoton();
    }//GEN-LAST:event_txtUserKeyReleased
    /**
     * Metodo para verificar si el usuario y password ingresados existen en la
     * BBDD, si existen dependera de si el usuario es admin o no, para ingresar
     * a una ventana u otra
     */
    public void verificarUsuario(String user, String pass) {

        UsuarioBean userBean = new UsuarioBean();
        List<Usuario> users = (List<Usuario>) userBean.listUsuario();
        boolean existe = false;
        for (int i = 0; i < users.size(); i++) {
            if (users.get(i).getUsuario().equals(user)) {
                if (users.get(i).getPassword().equals(pass)) {
                    if (users.get(i).getAdmin()) {
                        this.setVisible(false);
                        frame.remove(this);
                        VentanaAdmin admin = new VentanaAdmin(frame);
                        frame.getContentPane().add(admin);
                        admin.setVisible(true);
                        admin.setBounds(0, 0, 650, 400);
                        frame.setSize(650, 400);
                        JOptionPane.showMessageDialog(null, "Bienvenido " + users.get(i).getUsuario());
                        existe = true;
                    }
                    if (!users.get(i).getAdmin()) {
                        this.setVisible(false);
                        frame.remove(this);
                        VentanaVendedor vendedor = new VentanaVendedor(frame);
                        frame.getContentPane().add(vendedor);
                        frame.setSize(603, 402);
                        vendedor.setVisible(true);
                        vendedor.setSize(603, 402);
                        JOptionPane.showMessageDialog(null, "Bienvenido " + users.get(i).getUsuario());
                        existe = true;
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error la contraseÃ±a ingresada no corresponde con el usuario", "", JOptionPane.ERROR_MESSAGE);
                    txtUser.setText("");
                    txtPasswordField.setText("");
                    existe = true;
                }
            }
        }
        if (!existe) {
            JOptionPane.showMessageDialog(null, " Usuario incorrecto o no Existe, porfavor intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE);
            txtUser.setText("");
            txtPasswordField.setText("");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField txtPasswordField;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

}
