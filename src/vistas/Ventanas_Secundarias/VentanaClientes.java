package vistas.Ventanas_Secundarias;

import controladores.ClienteBean;
import vistas.Fondo;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Cliente;
import vistas.VentanasPrincipales.VentanaAdmin;

/**
 * Clase VentanaClientes extiende de la Clase Fondo Se abrira luego de pulsar el
 * boton clientes en la ventana Admin presenta la lista de clientes existente,
 * permite crear nuevos clientes o eliminar existentes
 *
 * @author Carlos Halberth Almanza Lopez
 */
public class VentanaClientes extends Fondo {

    JFrame frame = new JFrame();

    public VentanaClientes() {
        initComponents();
    }

    /**
     * Creates new form VentanaClientes
     *
     * @param jframe
     */
    public VentanaClientes(JFrame jframe) {
        initComponents();
        frame = jframe;
        cargarClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnVolverAtras = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setPreferredSize(new java.awt.Dimension(400, 64));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 430, 191));

        btnVolverAtras.setText("Volver Atras");
        btnVolverAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverAtrasActionPerformed(evt);
            }
        });
        add(btnVolverAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, -1, -1));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Lista de Clientes");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setMinimumSize(new java.awt.Dimension(623, 36));
        jLabel13.setPreferredSize(new java.awt.Dimension(643, 70));
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 300, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverAtrasActionPerformed
        //Evento vuelve la ventana anterior
        this.setVisible(false);
        frame.remove(this);
        VentanaAdmin i = new VentanaAdmin(frame);
        frame.getContentPane().add(i);
        frame.setSize(603, 402);
        i.setVisible(true);
        i.setSize(603, 402);
    }//GEN-LAST:event_btnVolverAtrasActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        //Evento genera la ventana para crear Cliente
        this.setVisible(false);
        frame.remove(this);
        VentanaCrearCliente cl = new VentanaCrearCliente(frame);
        frame.getContentPane().add(cl);
        frame.setSize(603, 402);
        cl.setVisible(true);
        cl.setSize(603, 402);

    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        //Evento ejecuta un JOptionPane que recibe un numero que elimina un cliente con ese
        //numero de codigo si existe
        String nombre;
        nombre = JOptionPane.showInputDialog("Ingrese el codigo del Cliente que desea eliminar");
        if (nombre != null && !nombre.isEmpty()) {
            if (nombre.matches("[0-9]*")) {
                int codigo = Integer.parseInt(nombre);
                ClienteBean t = new ClienteBean();
                Cliente cl = t.obtenerCliente(codigo);
                if (cl != null && cl.getDisponible()) {
                    cl.setDisponible(false);
                    t.actualizarCliente(cl);
                    JOptionPane.showMessageDialog(null, "Cliente Eliminada Correctamente");
                    cargarClientes();
                } else {
                    JOptionPane.showMessageDialog(null, "Codigo no existente, ingrese un codigo correcto", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un codigo correcto", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /*
    *Metodo para cargar la lista de clientes existente, que estan disponibles
     */
    public void cargarClientes() {
        ClienteBean op = new ClienteBean();
        List listUsuarios = op.listCliente();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Telefono");
        modelo.addColumn("Ciudad");
        if (!listUsuarios.isEmpty() && listUsuarios != null) {
            for (Iterator iterator = listUsuarios.iterator(); iterator.hasNext();) {
                Cliente u = (Cliente) iterator.next();
                if (u.getDisponible()) {
                    Object[] fila = new Object[5];
                    fila[0] = u.getCodCliente();
                    fila[1] = u.getNombre().toUpperCase();
                    fila[2] = u.getApellidos().toUpperCase();
                    fila[3] = u.getTelefono();
                    fila[4] = u.getCiudad().toUpperCase();
                    modelo.addRow(fila);
                }
            }
        }
        jTable1.setModel(modelo);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnVolverAtras;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
